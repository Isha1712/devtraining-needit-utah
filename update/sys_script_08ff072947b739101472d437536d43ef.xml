<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>NeedIt When needed field date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
       
	// //rightNow stores the current datetime   
	// var rightNow = new GlideDateTime();
    // //whenNeeded stores the value from the wheneeded datetime field
	// var whenNeeded = new GlideDateTime(current.u_when_needed);

	// //If the when needed is set to a past date do not store the record to the database
	// //Output an error msg to the screen

	// if(whenNeeded.before(rightNow))
	// {
	// 	gs.addErrorMessage('When needed date cannot be in the past. Your record has not been saved to the database.');
	// 	current.setAbortAction(true);
	// }

	// 	//Do not allow same day requests
	// 	//Get on the date portion of whenNeeded and rightNow variables

	// 	var today = rightNow.getLocalDate();
	// 	var whenNeededDate = whenNeeded.getLocalDate();

	// 	//Compare today and whenNeededDate to check if they are same day requests

	// 	if(today.compareTo(whenNeededDate) == 0)
	// 	{
	// 		gs.addErrorMessage('NeedIt requests cannot be of the same date. Your record is not saved to database');
	// 		current.setAbortAction(true);
	// 		gs.debug('NeedIt When needed field date: This is debgu info');
	// 	}


    //Instantiate the NeedUitls class - the script Include
	var niUtilsObj = new NeedItUtils();
	//Access the isPastDate method of the scriptinclude
	var isPast = niUtilsObj.isPastDate(current.u_when_needed);

    // Check if isDate is true means date is in the past , hence display error message 
	if(isPast == true)
	{
		gs.addErrorMessage("When needed cannot be in the past. Your request has not been saved to the database");
		//Abort the database operation
		current.setAbortAction(true);

		}

   //Check if the whenNeeded date is of today	
  // var isToday = niUtilsObj.isToday(current.u_when_needed);
   var isToday = niUtilsObj.isDateToday(current.u_when_needed);

   if(isToday == true)
   {
	gs.addErrorMessage("When needed cannot be of today. Select any other date after today.");
	current.setAbortAction(true);
   }	

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-01-18 01:19:30</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>08ff072947b739101472d437536d43ef</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>NeedIt When needed field date</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_08ff072947b739101472d437536d43ef</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-01-29 12:28:54</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=08ff072947b739101472d437536d43ef"/>
</record_update>
